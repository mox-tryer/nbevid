/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mox.nbevid.explorer.editors;


import java.awt.Image;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JToolBar;
import mox.nbevid.explorer.nodes.DbInfo;
import mox.nbevid.model.SpendingsDatabase;
import org.netbeans.core.spi.multiview.CloseOperationState;
import org.netbeans.core.spi.multiview.MultiViewDescription;
import org.netbeans.core.spi.multiview.MultiViewElement;
import org.netbeans.core.spi.multiview.MultiViewElementCallback;
import org.openide.awt.UndoRedo;
import org.openide.util.HelpCtx;
import org.openide.util.Lookup;
import org.openide.util.lookup.Lookups;
import org.openide.windows.TopComponent;


/**
 *
 * @author martin
 */
public class DbItemsEditorPanel extends javax.swing.JPanel implements MultiViewElement {
  private static final long serialVersionUID = 1L;
  
  private MultiViewElementCallback callback;

  private final JToolBar toolbar = new JToolBar();
  
  private final SpendingsDatabase db;
  private final DbInfo dbInfo;
  private final Lookup lookup;

  /**
   * Creates new form DbItemsEditorPanel
   */
  public DbItemsEditorPanel(SpendingsDatabase db, DbInfo dbInfo) {
    this.db = db;
    this.dbInfo = dbInfo;
    this.lookup = Lookups.fixed(db, dbInfo);
    
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
   * Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 300, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  @Override
  public JComponent getVisualRepresentation() {
    return this;
  }

  @Override
  public JComponent getToolbarRepresentation() {
    return toolbar;
  }

  @Override
  public Action[] getActions() {
    return callback.createDefaultActions();
  }

  @Override
  public Lookup getLookup() {
    return lookup;
  }

  @Override
  public void componentOpened() {
  }

  @Override
  public void componentClosed() {
  }

  @Override
  public void componentShowing() {
  }

  @Override
  public void componentHidden() {
  }

  @Override
  public void componentActivated() {
  }

  @Override
  public void componentDeactivated() {
  }

  @Override
  public UndoRedo getUndoRedo() {
    return UndoRedo.NONE;
  }

  @Override
  public void setMultiViewCallback(MultiViewElementCallback callback) {
    this.callback = callback;
  }

  @Override
  public CloseOperationState canCloseElement() {
    return CloseOperationState.STATE_OK;
  }


  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables

  public static final class Description implements MultiViewDescription, java.io.Serializable {
    private static final long serialVersionUID = 1L;
    private final Image icon;
    private final SpendingsDatabase db;
    private final DbInfo dbInfo;

    public Description(Image icon, SpendingsDatabase db, DbInfo dbInfo) {
      this.icon = icon;
      this.db = db;
      this.dbInfo = dbInfo;
    }
    
    @Override
    public int getPersistenceType() {
      return TopComponent.PERSISTENCE_NEVER;
    }

    @Override
    public String getDisplayName() {
      return "Items";
    }

    @Override
    public Image getIcon() {
      return icon;
    }

    @Override
    public HelpCtx getHelpCtx() {
      return null;
    }

    @Override
    public String preferredID() {
      return "DbItemsEditor";
    }

    @Override
    public MultiViewElement createElement() {
      return new DbItemsEditorPanel(db, dbInfo);
    }
  }
}
